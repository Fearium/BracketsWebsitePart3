{"version":3,"sources":["routes/todos.ts"],"names":[],"mappings":"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","file":"routes/todos.js","sourcesContent":["import express = require('express');\r\nimport passport = require('passport');\r\nvar router = express.Router();\r\n\r\n// db references\r\nimport mongoose = require('mongoose');\r\n\r\nimport todoModel = require('../models/todo');\r\nimport Todo = todoModel.Todo;\r\n\r\n/* Utility Function to check if user is authenticated */\r\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\r\n    // check if the user is logged in\r\n    if (!req.isAuthenticated()) {\r\n        return res.redirect('/login');\r\n    }\r\n    next();\r\n}\r\n\r\n/* READ TODOS */\r\nrouter.get('/', requireAuth, (req:express.Request, res:express.Response, next:any) => {\r\n  Todo.find((err:Error, todos) => {\r\n     if(err)\r\n     {\r\n         return next(err);\r\n     }\r\n      res.json(todos);\r\n  });\r\n});\r\n\r\n/* CREATE TODOS */\r\nrouter.post('/', requireAuth, (req:express.Request, res:express.Response, next:any) => {\r\n   Todo.create(req.body, (err:Error, post:mongoose.PassportLocalDocument) => {\r\n      if(err){\r\n        return next(err);}\r\n\r\n      res.json(post);\r\n   });\r\n});\r\n\r\n/* READ /todos/id */\r\nrouter.get('/:id', requireAuth, (req:express.Request, res:express.Response, next:any) => {\r\n   Todo.findById(req.params.id, (err:Error, post:mongoose.PassportLocalDocument) => {\r\n      if(err) {\r\n        return next(err);}\r\n       res.json(post);\r\n   });\r\n});\r\n\r\n/* UPDATE /todos/:id */\r\nrouter.put('/:id', requireAuth, (req:express.Request, res:express.Response, next:any) => {\r\n   Todo.findByIdAndUpdate(req.params.id, req.body, (err:Error, post:mongoose.PassportLocalDocument) => {\r\n      if(err) {\r\n          return next(err);\r\n        }\r\n       res.json(post);\r\n   }); \r\n});\r\n\r\n/* DELETE /todos/:id */\r\nrouter.delete('/:id', requireAuth, (req:express.Request, res:express.Response, next:any) => {\r\n   Todo.findByIdAndRemove(req.params.id, req.body, (err:Error, post:mongoose.PassportLocalDocument) => {\r\n      if(err) {\r\n          return next(err);\r\n          }\r\n       res.json(post);\r\n   });\r\n});\r\n\r\nmodule.exports = router;"],"sourceRoot":"/source/"}